{"version":3,"sources":["./src/api_key/api_key.ts","./src/api/api.ts","./src/dailies/dailies_module.ts","./src/app/app_module.ts","./src/characters/equipment_expander.ts","./src/characters/equipment_expander.ng.html","./src/environments/environment.ts","./src/api_key/api_key_dialog_module.ts","./src/worlds/worlds_module.ts","./src/dailies/dailies.ts","./src/dailies/dailies.ng.html","./src/account_info/account_info_module.ts","./src/api_key/api_key_dialog.ts","./src/api_key/api_key_dialog.ng.html","./src/worlds/worlds.ts","./src/worlds/worlds.ng.html","./src/inventory/inventory.ts","./src/inventory/inventory.ng.html","./src/characters/armor_weapon_info.ng.html","./src/characters/armor_weapon_info.ts","./src/app/app.ts","./src/app/app.ng.html","./src/characters/characters.ts","./src/characters/characters.ng.html","./src/characters/characters_module.ts","./src/util/dates.ts","./src/account_info/account_info.ts","./src/account_info/account_info.ng.html","./src/app/app_routing_module.ts","./src/inventory/inventory_module.ts","./src/item/item_service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\n\nimport {BehaviorSubject, Observable} from 'rxjs';\n\nimport {ApiKeyDialog} from './api_key_dialog';\n\nconst STORAGE_KEY = 'gw2-app-api-key';\n\nfunction getApiKey(): string | null {\n  return localStorage.getItem(STORAGE_KEY);\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiKeyService {\n  private readonly apiKeyInternal$ = new BehaviorSubject<string | null>(\n    getApiKey()\n  );\n  readonly apiKey$: Observable<string | null> = this.apiKeyInternal$;\n\n  constructor(private readonly matDialog: MatDialog) {}\n\n  setApiKey(): void {\n    const currentKey = this.apiKeyInternal$.getValue() ?? '';\n    const config = {\n      autoFocus: false,\n      data: {\n        apiKey: currentKey,\n      },\n      width: '850px',\n    };\n    const dialogRef = this.matDialog.open(ApiKeyDialog, config);\n\n    dialogRef\n      .afterClosed()\n      .subscribe((newApiKey: string | null | undefined) => {\n        // User clicked cancel\n        if (newApiKey === undefined) {\n          return;\n        }\n\n        if (newApiKey === null) {\n          // User clicked remove key\n          localStorage.removeItem(STORAGE_KEY);\n        } else {\n          // should be caught\n          localStorage.setItem(STORAGE_KEY, newApiKey);\n        }\n\n        this.apiKeyInternal$.next(newApiKey);\n      });\n  }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\n\nimport {combineLatest, EMPTY, Observable} from 'rxjs';\nimport {map, shareReplay, switchMap, tap} from 'rxjs/operators';\n\nimport {AccountApiObj, AchievementApiObj, BankApiObj, CharacterApiObj, DailyAchievementsApiObj, FileApiObj, GuildApiObj, ItemApiObj, MasteryPointsApiObj, MaterialApiObj, SharedInventoryApiObj, TitleApiObj, PvpApiObj, WorldApiObj} from './models';\nimport {ApiKeyService} from '../api_key/api_key';\n// https://wiki.guildwars2.com/wiki/API:Main\n\nconst ITEMS_LIMIT = 199;\nconst ROOT_URL = 'https://api.guildwars2.com/v2/';\n\nenum Path {\n  ACCOUNT = 'account',\n  ACHIEVEMENTS = 'achievements',\n  BANK = 'account/bank',\n  BUILD = 'build',\n  CHARACTERS = 'characters',\n  COIN_EXCHANGE = 'commerce/exchange/coins',\n  COLORS = 'colors',\n  DAILY_ACHIEVEMENTS = 'achievements/daily',\n  FILES = 'files',\n  GEM_EXCHANGE = 'commerce/exchange/gems',\n  GUILD = 'guild',\n  INVENTORY = 'account/inventory',\n  ITEMS = 'items',\n  MASTERY_POINTS = 'account/mastery/points',\n  MATERIALS = 'account/materials',\n  PVP = 'pvp/stats',\n  TITLES = 'titles',\n  WORLDS = 'worlds',\n  WVW_RANKS = 'wvw/ranks',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private readonly account$ = this.createAccount();\n  private readonly bank$ = this.createBank();\n  private readonly characters$ = this.createCharacters();\n  private readonly dailyAchievements$ = this.createDailyAchievements();\n  private readonly files$ = this.createFilesMap();\n  private readonly masteryPoints$ = this.createMasteryPoints();\n  private readonly materials$ = this.createMaterials();\n  private readonly pvpStats$ = this.createPvpStats();\n  private readonly sharedInventory$ = this.createSharedInventory();\n  private readonly worlds$ = this.createWorlds();\n\n  constructor(\n    private readonly apiKeyService: ApiKeyService,\n    private readonly http: HttpClient\n  ) {}\n\n  getAccount(): Observable<AccountApiObj> {\n    return this.account$;\n  }\n\n  getAchievements(ids: number[]): Observable<AchievementApiObj[]> {\n    const params = {ids: `${ids.join(',')}`};\n    return this.http.get<AchievementApiObj[]>(\n      `${ROOT_URL}${Path.ACHIEVEMENTS}`,\n      {params}\n    );\n  }\n\n  getBank(): Observable<BankApiObj[]> {\n    return this.bank$;\n  }\n\n  getCharacters(): Observable<CharacterApiObj[]> {\n    return this.characters$;\n  }\n\n  getDailyAchievements(): Observable<DailyAchievementsApiObj> {\n    return this.dailyAchievements$;\n  }\n\n  getFilesMap(): Observable<Map<string, string>> {\n    return this.files$;\n  }\n\n  getGuild(id: string): Observable<GuildApiObj> {\n    return this.http.get<GuildApiObj>(`${ROOT_URL}${Path.GUILD}/${id}`);\n  }\n\n  getItem(id: number): Observable<ItemApiObj> {\n    return this.http.get<ItemApiObj>(`${ROOT_URL}${Path.ITEMS}/${id}`);\n  }\n\n  getItems(ids: number[]): Observable<ItemApiObj[]> {\n    if (ids.length <= ITEMS_LIMIT) {\n      const joinedIds = ids.join(',');\n      return this.http.get<ItemApiObj[]>(\n          `${ROOT_URL}${Path.ITEMS}?ids=${joinedIds}`);\n    }\n\n    let i: number;\n    let j: number;\n    const allJoinedIds: string[] = [];\n    for (i = 0, j = ids.length; i < j; i += ITEMS_LIMIT) {\n      const joinedIds = ids.slice(i, i + ITEMS_LIMIT).join(',');\n      allJoinedIds.push(joinedIds);\n    }\n\n    const itemRequests$ = allJoinedIds.map((ids) => {\n      return this.http.get<ItemApiObj[]>(\n          `${ROOT_URL}${Path.ITEMS}?ids=${ids}`);\n    });\n\n    return combineLatest(itemRequests$).pipe(\n        map((items) => items.flat(1)),\n    );\n  }\n\n  getMasteryPoints(): Observable<MasteryPointsApiObj> {\n    return this.masteryPoints$;\n  }\n\n  getMaterials(): Observable<MaterialApiObj[]> {\n    return this.materials$;\n  }\n\n  getPvpStats(): Observable<PvpApiObj> {\n    return this.pvpStats$;\n  }\n\n  getSharedInventory(): Observable<SharedInventoryApiObj[]> {\n    return this.sharedInventory$;\n  }\n\n  getTitle(id: number): Observable<TitleApiObj> {\n    return this.http.get<TitleApiObj>(`${ROOT_URL}${Path.TITLES}/${id}`);\n  }\n\n  getWorlds(): Observable<WorldApiObj[]> {\n    return this.worlds$;\n  }\n\n  private createAccount(): Observable<AccountApiObj> {\n    return this.apiKeyService.apiKey$.pipe(\n      switchMap(apiKey => {\n        if (apiKey === null) {\n          return EMPTY;\n        }\n\n        const params = {access_token: apiKey};\n        return this.http.get<AccountApiObj>(`${ROOT_URL}${Path.ACCOUNT}`, {\n          params,\n        });\n      }),\n      shareReplay({bufferSize: 1, refCount: false})\n    );\n  }\n\n  private createBank(): Observable<BankApiObj[]> {\n    return this.apiKeyService.apiKey$.pipe(\n      switchMap(apiKey => {\n        if (apiKey === null) {\n          return EMPTY;\n        }\n\n        const params = {access_token: apiKey};\n        return this.http.get<BankApiObj[]>(`${ROOT_URL}${Path.BANK}`, {\n              params,\n            });\n      }),\n      shareReplay({bufferSize: 1, refCount: false})\n    );\n  }\n\n  private createCharacters(): Observable<CharacterApiObj[]> {\n    return this.apiKeyService.apiKey$.pipe(\n      switchMap(apiKey => {\n        if (apiKey === null) {\n          return EMPTY;\n        }\n\n        const params = {access_token: apiKey, ids: 'all'};\n        return this.http.get<CharacterApiObj[]>(\n          `${ROOT_URL}${Path.CHARACTERS}`,\n          {params}\n        );\n      }),\n      shareReplay({bufferSize: 1, refCount: false})\n    );\n  }\n\n  private createDailyAchievements(): Observable<DailyAchievementsApiObj> {\n    return this.http\n      .get<DailyAchievementsApiObj>(`${ROOT_URL}${Path.DAILY_ACHIEVEMENTS}`)\n      .pipe(shareReplay({bufferSize: 1, refCount: false}));\n  }\n\n  private createFilesMap(): Observable<Map<string, string>> {\n    const params = {ids: 'all'};\n    return this.http\n      .get<FileApiObj[]>(`${ROOT_URL}${Path.FILES}`, {params})\n      .pipe(\n        map(files => {\n          const fileMap = new Map<string, string>();\n          for (const file of files) {\n            fileMap.set(file.id, file.icon);\n          }\n\n          return fileMap;\n        }),\n        shareReplay({bufferSize: 1, refCount: false})\n      );\n  }\n\n  private createMasteryPoints(): Observable<MasteryPointsApiObj> {\n    return this.apiKeyService.apiKey$.pipe(\n      switchMap(apiKey => {\n        if (apiKey === null) {\n          return EMPTY;\n        }\n\n        const params = {access_token: apiKey};\n        return this.http.get<MasteryPointsApiObj>(\n          `${ROOT_URL}${Path.MASTERY_POINTS}`,\n          {params}\n        );\n      }),\n      shareReplay({bufferSize: 1, refCount: false})\n    );\n  }\n\n  private createMaterials(): Observable<MaterialApiObj[]> {\n    return this.apiKeyService.apiKey$.pipe(\n      switchMap(apiKey => {\n        if (apiKey === null) {\n          return EMPTY;\n        }\n\n        const params = {access_token: apiKey};\n        return this.http.get<MaterialApiObj[]>(`${ROOT_URL}${Path.MATERIALS}`, {\n              params,\n            });\n      }),\n      shareReplay({bufferSize: 1, refCount: false})\n    );\n  }\n\n  private createPvpStats(): Observable<PvpApiObj> {\n    return this.apiKeyService.apiKey$.pipe(\n      switchMap(apiKey => {\n        if (apiKey === null) {\n          return EMPTY;\n        }\n\n        const params = {access_token: apiKey};\n        return this.http.get<PvpApiObj>(`${ROOT_URL}${Path.PVP}`, {params});\n      }),\n      shareReplay({bufferSize: 1, refCount: false})\n    );\n  }\n\n  private createSharedInventory(): Observable<SharedInventoryApiObj[]> {\n    return this.apiKeyService.apiKey$.pipe(\n      switchMap(apiKey => {\n        if (apiKey === null) {\n          return EMPTY;\n        }\n\n        const params = {access_token: apiKey};\n        return this.http\n            .get<SharedInventoryApiObj[]>(`${ROOT_URL}${Path.INVENTORY}`, {\n              params,\n            });\n      }),\n      shareReplay({bufferSize: 1, refCount: false})\n    );\n  }\n\n  private createWorlds(): Observable<WorldApiObj[]> {\n    const params = {ids: 'all'};\n    return this.http\n      .get<WorldApiObj[]>(`${ROOT_URL}${Path.WORLDS}`, {params})\n      .pipe(shareReplay({bufferSize: 1, refCount: false}));\n  }\n}\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\nimport {Dailies} from './dailies';\r\n\r\n@NgModule({\r\n  declarations: [Dailies],\r\n  imports: [\r\n    CommonModule,\r\n    MatProgressBarModule,\r\n    MatTableModule,\r\n  ],\r\n  exports: [Dailies]\r\n})\r\nexport class DailiesModule {}\r\n","import {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {AppRoutingModule} from './app_routing_module';\nimport {App} from './app';\n\nimport {AccountInfoModule} from '../account_info/account_info_module';\nimport {ApiKeyDialogModule} from '../api_key/api_key_dialog_module';\nimport {CharactersModule} from '../characters/characters_module';\nimport {DailiesModule} from '../dailies/dailies_module';\nimport {InventoryModule} from '../inventory/inventory_module';\nimport {WorldsModule} from '../worlds/worlds_module';\n\n@NgModule({\n  declarations: [App],\n  imports: [\n    AccountInfoModule,\n    ApiKeyDialogModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    CharactersModule,\n    DailiesModule,\n    HttpClientModule,\n    InventoryModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatToolbarModule,\n    WorldsModule,\n  ],\n  providers: [],\n  bootstrap: [App],\n})\nexport class AppModule {}\n","import {Component, Input, ViewChild} from '@angular/core';\r\nimport {MatExpansionPanel} from '@angular/material/expansion';\r\n\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\nimport {EquipmentApiObj, ItemApiObj} from '../api/models';\r\nimport {ItemService} from '../item/item_service';\r\n\r\ninterface Equipment {\r\n  accessory1?: ItemApiObj;\r\n  accessory2?: ItemApiObj;\r\n  amulet?: ItemApiObj;\r\n  axe?: ItemApiObj;\r\n  backpack?: ItemApiObj;\r\n  boots?: ItemApiObj;\r\n  coat?: ItemApiObj;\r\n  gloves?: ItemApiObj;\r\n  helm?: ItemApiObj;\r\n  helmAquatic?: ItemApiObj;\r\n  leggings?: ItemApiObj;\r\n  pick?: ItemApiObj;\r\n  ring1?: ItemApiObj;\r\n  ring2?: ItemApiObj;\r\n  shoulders?: ItemApiObj;\r\n  sickle?: ItemApiObj;\r\n  weaponA1?: ItemApiObj;\r\n  weaponA2?: ItemApiObj;\r\n  weaponAquaticA?: ItemApiObj;\r\n  weaponAquaticB?: ItemApiObj;\r\n  weaponB1?: ItemApiObj;\r\n  weaponB2?: ItemApiObj;\r\n}\r\n\r\n@Component({\r\n  selector: 'gw-equipment-expander',\r\n  templateUrl: './equipment_expander.ng.html',\r\n  styleUrls: ['./equipment_expander.scss'],\r\n})\r\nexport class EquipmentExpander {\r\n\r\n  @Input() equipments: EquipmentApiObj[] = [];\r\n\r\n  @ViewChild(MatExpansionPanel) expander!: MatExpansionPanel;\r\n\r\n  readonly equipment$ = this.createEquipment();\r\n  isClosed = true;\r\n\r\n  constructor(private readonly itemService: ItemService) {}\r\n\r\n  close(): void {\r\n    this.expander.close();\r\n  }\r\n\r\n  open(): void {\r\n    this.expander.open();\r\n  }\r\n\r\n  private createEquipment(): Observable<Equipment> {\r\n    return this.itemService.getAllCharacterItemIdsToItems().pipe(\r\n        map((itemIdsToItems) => {\r\n          const equipment: Equipment = {};\r\n\r\n          for (const equipmentApiObj of this.equipments) {\r\n            const item = itemIdsToItems.get(equipmentApiObj.id);\r\n            if (!item) {\r\n              console.warn(`Missing item ID: [${equipmentApiObj.id}]`);\r\n              continue;\r\n            }\r\n\r\n            switch (equipmentApiObj.slot) {\r\n              case 'Accessory1':\r\n                equipment.accessory1 = item;\r\n                break;\r\n              case 'Accessory2':\r\n                equipment.accessory2 = item;\r\n                break;\r\n              case 'Amulet':\r\n                equipment.amulet = item;\r\n                break;\r\n              case 'Axe':\r\n                equipment.axe = item;\r\n                break;\r\n              case 'Backpack':\r\n                equipment.backpack = item;\r\n                break;\r\n              case 'Boots':\r\n                equipment.boots = item;\r\n                break;\r\n              case 'Coat':\r\n                equipment.coat = item;\r\n                break;\r\n              case 'Gloves':\r\n                equipment.gloves = item;\r\n                break;\r\n              case 'Helm':\r\n                equipment.helm = item;\r\n                break;\r\n              case 'HelmAquatic':\r\n                equipment.helmAquatic = item;\r\n                break;\r\n              case 'Leggings':\r\n                equipment.leggings = item;\r\n                break;\r\n              case 'Pick':\r\n                equipment.pick = item;\r\n                break;\r\n              case 'Ring1':\r\n                equipment.ring1 = item;\r\n                break;\r\n              case 'Ring2':\r\n                equipment.ring2 = item;\r\n                break;\r\n              case 'Shoulders':\r\n                equipment.shoulders = item;\r\n                break;\r\n              case 'Sickle':\r\n                equipment.sickle = item;\r\n                break;\r\n              case 'WeaponA1':\r\n                equipment.weaponA1 = item;\r\n                break;\r\n              case 'WeaponA2':\r\n                equipment.weaponA2 = item;\r\n                break;\r\n              case 'WeaponAquaticA':\r\n                equipment.weaponAquaticA = item;\r\n                break;\r\n              case 'WeaponAquaticB':\r\n                equipment.weaponAquaticB = item;\r\n                break;\r\n              case 'WeaponB1':\r\n                equipment.weaponB1 = item;\r\n                break;\r\n              case 'WeaponB2':\r\n                equipment.weaponB2 = item;\r\n            }\r\n          }\r\n\r\n          return equipment;\r\n        }),\r\n    );\r\n  }\r\n}\r\n","<mat-expansion-panel\r\n    (closed)=\"isClosed = true\"\r\n    (opened)=\"isClosed = true\">\r\n  <mat-expansion-panel-header>\r\n    <mat-panel-title>\r\n      <span *ngIf=\"isClosed else openPanel\">\r\n        {{equipments.length}} Pieces of Equipment\r\n      </span>\r\n      <ng-template #openPanel>\r\n        <span\r\n            class=\"open-panel-title\"\r\n            [matBadge]=\"equipments.length\"\r\n            matBadgeColor=\"accent\"\r\n            matBadgeOverlap=\"false\">\r\n          Equipment\r\n        </span>\r\n      </ng-template>\r\n    </mat-panel-title>\r\n  </mat-expansion-panel-header>\r\n  <div class=\"container\" *ngIf=\"equipment$ | async as equipment\">\r\n    <div class=\"equipment-section mining-section\">\r\n      <p class=\"section-title\">Mining Tools</p>\r\n      <div class=\"item-row\" *ngIf=\"equipment.axe as axe\">\r\n        <p>Axe</p>\r\n        <p>{{axe.name}}</p>\r\n      </div>\r\n      <div class=\"item-row\" *ngIf=\"equipment.pick as pick\">\r\n        <p>Pick</p>\r\n        <p>{{pick.name}}</p>\r\n      </div>\r\n      <div class=\"item-row\" *ngIf=\"equipment.sickle as sickle\">\r\n        <p>Sickle</p>\r\n        <p>{{sickle.name}}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"equipment-section armor-section\">\r\n      <p class=\"section-title\">Armor</p>\r\n      <div class=\"item-row\">\r\n        <p>Helm</p>\r\n        <p *ngIf=\"equipment.helm as helm\">\r\n          <gw-armor-weapon-info [item]=\"helm\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n      <div class=\"item-row\">\r\n        <p>Shoulders</p>\r\n        <p *ngIf=\"equipment.shoulders as shoulders\">\r\n          <gw-armor-weapon-info [item]=\"shoulders\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n      <div class=\"item-row\">\r\n        <p>Coat</p>\r\n        <p *ngIf=\"equipment.coat as coat\">\r\n          <gw-armor-weapon-info [item]=\"coat\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n      <div class=\"item-row\">\r\n        <p>Gloves</p>\r\n        <p *ngIf=\"equipment.gloves as gloves\">\r\n          <gw-armor-weapon-info [item]=\"gloves\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n      <div class=\"item-row\">\r\n        <p>Leggings</p>\r\n        <p *ngIf=\"equipment.leggings as leggings\">\r\n          <gw-armor-weapon-info [item]=\"leggings\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n      <div class=\"item-row\">\r\n        <p>Boots</p>\r\n        <p *ngIf=\"equipment.boots as boots\">\r\n          <gw-armor-weapon-info [item]=\"boots\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n      <div class=\"item-row\">\r\n        <p>Backpack</p>\r\n        <p *ngIf=\"equipment.backpack as backpack\">\r\n          <gw-armor-weapon-info [item]=\"backpack\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n      <div class=\"item-row\">\r\n        <p>Aquatic Helm</p>\r\n        <p *ngIf=\"equipment.helmAquatic as helmAquatic\">\r\n          <gw-armor-weapon-info [item]=\"helmAquatic\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"equipment-section weapons-section\">\r\n      <p class=\"section-title\">Weapons</p>\r\n      <div class=\"item-row\">\r\n        <p>Weapon Set 1</p>\r\n        <p *ngIf=\"equipment.weaponA1 as weaponA1\">\r\n          <gw-armor-weapon-info [item]=\"weaponA1\"></gw-armor-weapon-info>\r\n        </p>\r\n        <p *ngIf=\"equipment.weaponA2 as weaponA2\">\r\n          <gw-armor-weapon-info [item]=\"weaponA2\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n      <div class=\"item-row\">\r\n        <p>Weapon Set 2</p>\r\n        <p *ngIf=\"equipment.weaponB1 as weaponB1\">\r\n          <gw-armor-weapon-info [item]=\"weaponB1\"></gw-armor-weapon-info>\r\n        </p>\r\n        <p *ngIf=\"equipment.weaponB2 as weaponB2\">\r\n          <gw-armor-weapon-info [item]=\"weaponB2\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n      <div class=\"item-row\">\r\n        <p>Aquatic Weapons</p>\r\n        <p *ngIf=\"equipment.weaponAquaticA as weaponAquaticA\">\r\n          <gw-armor-weapon-info [item]=\"weaponAquaticA\"></gw-armor-weapon-info>\r\n        </p>\r\n        <p *ngIf=\"equipment.weaponAquaticB as weaponAquaticB\">\r\n          <gw-armor-weapon-info [item]=\"weaponAquaticB\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"equipment-section trinkets-section\">\r\n      <p class=\"section-title\">Trinkets</p>\r\n      <div class=\"item-row\">\r\n        <p>Amulet</p>\r\n        <p *ngIf=\"equipment.amulet as amulet\">\r\n          <gw-armor-weapon-info [item]=\"amulet\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n      <div class=\"item-row\">\r\n        <p>Accessories</p>\r\n        <p *ngIf=\"equipment.accessory1 as accessory1\">\r\n          <gw-armor-weapon-info [item]=\"accessory1\"></gw-armor-weapon-info>\r\n        </p>\r\n        <p *ngIf=\"equipment.accessory2 as accessory2\">\r\n          <gw-armor-weapon-info [item]=\"accessory2\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n      <div class=\"item-row\">\r\n        <p>Rings</p>\r\n        <p *ngIf=\"equipment.ring1 as ring1\">\r\n          <gw-armor-weapon-info [item]=\"ring1\"></gw-armor-weapon-info>\r\n        </p>\r\n        <p *ngIf=\"equipment.ring2 as ring2\">\r\n          <gw-armor-weapon-info [item]=\"ring2\"></gw-armor-weapon-info>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-expansion-panel>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\n\nimport {ApiKeyDialog} from './api_key_dialog';\n\n@NgModule({\n  declarations: [ApiKeyDialog],\n  imports: [MatButtonModule, MatDialogModule, MatInputModule],\n})\nexport class ApiKeyDialogModule {}\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\nimport {Worlds} from './worlds';\r\n\r\n@NgModule({\r\n  declarations: [Worlds],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatProgressBarModule,\r\n    MatTableModule,\r\n  ],\r\n  exports: [Worlds]\r\n})\r\nexport class WorldsModule {}\r\n","import {Component} from '@angular/core';\r\n\r\nimport {combineLatest, Observable, of as observableOf} from 'rxjs';\r\nimport {map, switchMap} from 'rxjs/operators';\r\n\r\nimport {ApiService} from '../api/api';\r\nimport {AchievementApiObj, DailyAchievementApiObj, ItemApiObj, ItemReward} from '../api/models';\r\nimport {ItemService} from '../item/item_service';\r\n\r\ninterface DataSourceObject {\r\n  readonly id: number;\r\n  readonly name: string;\r\n  readonly description: string;\r\n  readonly requirement: string;\r\n  readonly level: string;\r\n  readonly type: 'PvE'|'PvP'|'WvW'|'Fractals'|'Special';\r\n  readonly rewards?: string;\r\n}\r\n\r\nfunction getRewardsNamesFromAchievement(\r\n    achievement: AchievementApiObj, itemsMap: Map<number, ItemApiObj>): string {\r\n  if (!achievement.rewards.length) {\r\n    return 'None';\r\n  }\r\n\r\n  const rewardNames = [];\r\n  for (const reward of achievement.rewards) {\r\n    if (reward.type !== 'Item') {\r\n      continue;\r\n    }\r\n\r\n    const item = itemsMap.get(reward.id);\r\n    if (!item) {\r\n      continue;\r\n    }\r\n    rewardNames.push(item.name);\r\n  }\r\n\r\n  if (!rewardNames.length) {\r\n    return 'None';\r\n  }\r\n  return rewardNames.join(', ');\r\n}\r\n\r\n@Component({\r\n  selector: 'gw-dailies',\r\n  templateUrl: './dailies.ng.html',\r\n  styleUrls: ['./dailies.scss']\r\n})\r\nexport class Dailies {\r\n\r\n  readonly data$ = this.createData();\r\n  readonly displayedColumns = [\r\n      'type',\r\n      'level',\r\n      'name',\r\n      'requirement',\r\n      'rewards',\r\n  ];\r\n\r\n  constructor(\r\n      private readonly apiService: ApiService,\r\n      private readonly itemService: ItemService,\r\n  ) {}\r\n\r\n  private createData(): Observable<DataSourceObject[]> {\r\n    return this.apiService.getDailyAchievements().pipe(\r\n        switchMap((dailyAchievements) => {\r\n          const achievementIds = Object.values(dailyAchievements).flat().map(\r\n              (dailyAchievement: DailyAchievementApiObj) => {\r\n                return dailyAchievement.id;\r\n              });\r\n          const achievementsMap$ =\r\n              this.apiService.getAchievements(achievementIds).pipe(\r\n                  map((achievements) => {\r\n                    const map = new Map<number, AchievementApiObj>();\r\n                    for (const achievement of achievements) {\r\n                      map.set(achievement.id, achievement);\r\n                    }\r\n                    return map;\r\n                  }));\r\n\r\n          return combineLatest([\r\n              achievementsMap$,\r\n              observableOf(dailyAchievements),\r\n          ]);\r\n        }),\r\n        switchMap(([achievementsMap, dailyAchievements]) => {\r\n          const rewardsIds = Array.from(achievementsMap.values()).map(\r\n              (achievement: AchievementApiObj) => {\r\n                return achievement.rewards;\r\n              })\r\n          .flat()\r\n          .filter((reward): reward is ItemReward => reward.type === 'Item')\r\n          .map((reward) => reward.id);\r\n\r\n          const itemsMap$ =\r\n              combineLatest(rewardsIds.map((id) => {\r\n                return this.itemService.getItem(id);\r\n              }))\r\n                  .pipe(\r\n                      map((items) => {\r\n                        const map = new Map<number, ItemApiObj>();\r\n                        for (const item of items) {\r\n                          map.set(item.id, item);\r\n                        }\r\n                        return map;\r\n                      }),\r\n                  );\r\n\r\n          return combineLatest([\r\n              observableOf(achievementsMap),\r\n              observableOf(dailyAchievements),\r\n              itemsMap$,\r\n          ]);\r\n        }),\r\n        map(([achievementsMap, dailyAchievements, itemsMap]) => {\r\n          const array: DataSourceObject[] = [];\r\n          for (const dailyAchievement of dailyAchievements.pve) {\r\n            const achievement = achievementsMap.get(dailyAchievement.id);\r\n            if (!achievement) {\r\n              continue;\r\n            }\r\n\r\n            array.push({\r\n              id: achievement.id,\r\n              name: achievement.name,\r\n              description: achievement.description,\r\n              requirement: achievement.requirement,\r\n              type: 'PvE',\r\n              level: `${dailyAchievement.level.min} - ${dailyAchievement.level.max}`,\r\n              rewards: getRewardsNamesFromAchievement(achievement, itemsMap),\r\n            });\r\n          }\r\n\r\n          for (const dailyAchievement of dailyAchievements.pvp) {\r\n            const achievement = achievementsMap.get(dailyAchievement.id);\r\n            if (!achievement) {\r\n              continue;\r\n            }\r\n\r\n            array.push({\r\n              id: achievement.id,\r\n              name: achievement.name,\r\n              description: achievement.description,\r\n              requirement: achievement.requirement,\r\n              type: 'PvP',\r\n              level: `${dailyAchievement.level.min} - ${dailyAchievement.level.max}`,\r\n              rewards: getRewardsNamesFromAchievement(achievement, itemsMap),\r\n            });\r\n          }\r\n\r\n          for (const dailyAchievement of dailyAchievements.wvw) {\r\n            const achievement = achievementsMap.get(dailyAchievement.id);\r\n            if (!achievement) {\r\n              continue;\r\n            }\r\n\r\n            array.push({\r\n              id: achievement.id,\r\n              name: achievement.name,\r\n              description: achievement.description,\r\n              requirement: achievement.requirement,\r\n              type: 'WvW',\r\n              level: `${dailyAchievement.level.min} - ${dailyAchievement.level.max}`,\r\n              rewards: getRewardsNamesFromAchievement(achievement, itemsMap),\r\n            });\r\n          }\r\n\r\n          for (const dailyAchievement of dailyAchievements.fractals) {\r\n            const achievement = achievementsMap.get(dailyAchievement.id);\r\n            if (!achievement) {\r\n              continue;\r\n            }\r\n\r\n            array.push({\r\n              id: achievement.id,\r\n              name: achievement.name,\r\n              description: achievement.description,\r\n              requirement: achievement.requirement,\r\n              type: 'Fractals',\r\n              level: `${dailyAchievement.level.min} - ${dailyAchievement.level.max}`,\r\n              rewards: getRewardsNamesFromAchievement(achievement, itemsMap),\r\n            });\r\n          }\r\n\r\n          return array;\r\n        }),\r\n    );\r\n  }\r\n}\r\n","<div *ngIf=\"{source: data$ | async} as data\">\r\n  <mat-progress-bar mode=\"indeterminate\" *ngIf=\"!data.source\"></mat-progress-bar>\r\n  <div class=\"title-table-container\" *ngIf=\"data.source\">\r\n    <div class=\"title\">Dailies</div>\r\n\r\n    <div class=\"table-container\">\r\n      <table [dataSource]=\"data.source\" mat-table>\r\n        <ng-container matColumnDef=\"type\">\r\n          <th mat-header-cell *matHeaderCellDef>Type</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.type}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"level\">\r\n          <th mat-header-cell *matHeaderCellDef>Level</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.level}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef>Name</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <div>{{element.name}}</div>\r\n            <div class=\"description\">{{element.description}}</div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"requirement\">\r\n          <th mat-header-cell *matHeaderCellDef>Requirement</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.requirement}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"rewards\">\r\n          <th mat-header-cell *matHeaderCellDef>Rewards</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.rewards}}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatTableModule} from '@angular/material/table';\n\nimport {AccountInfo} from './account_info';\n\n@NgModule({\n  declarations: [AccountInfo],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressBarModule,\n    MatTableModule,\n  ],\n  exports: [AccountInfo],\n})\nexport class AccountInfoModule {}\n","import {AfterViewInit, ChangeDetectionStrategy, Component, Inject, ViewChild} from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatInput} from '@angular/material/input';\n\n@Component({\n  selector: 'gw-api-key-dialog',\n  templateUrl: './api_key_dialog.ng.html',\n  styleUrls: ['./api_key_dialog.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ApiKeyDialog implements AfterViewInit {\n  @ViewChild(MatInput) inputEl!: MatInput;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) readonly data: {apiKey: string},\n    private readonly matDialogRef: MatDialogRef<ApiKeyDialog>\n  ) {}\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.inputEl.focus();\n    }, 100);\n  }\n\n  cancel(): void {\n    this.matDialogRef.close();\n  }\n\n  isDisabled(): boolean {\n    return !this.inputEl?.value;\n  }\n\n  removeKey(): void {\n    this.matDialogRef.close(null);\n  }\n\n  setKey(): void {\n    this.matDialogRef.close(this.inputEl.value);\n  }\n}\n","<h2 mat-dialog-title>Enter an API key</h2>\r\n<mat-dialog-content>\r\n  You can find your Guild Wars 2 API key or create a new one\r\n  <a\r\n      class=\"gw-link\"\r\n      href=\"https://account.arena.net/applications\"\r\n      rel=\"noopener\"\r\n      target=\"_blank\">\r\n    here\r\n  </a>\r\n  <div>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>API Key</mat-label>\r\n      <input\r\n          (keydown.enter)=\"setKey()\"\r\n          matInput\r\n          placeholder=\"D37DC-78F2-8445-8399\"\r\n          [value]=\"data.apiKey\">\r\n    </mat-form-field>\r\n  </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button (click)=\"cancel()\" mat-button>Cancel</button>\r\n  <button (click)=\"removeKey()\" color=\"warn\" mat-button>Remove key</button>\r\n  <button\r\n      (click)=\"setKey()\"\r\n      color=\"primary\"\r\n      [disabled]=\"isDisabled()\"\r\n      mat-button>\r\n    Set key\r\n  </button>\r\n</mat-dialog-actions>\r\n","import {Component} from '@angular/core';\r\n\r\nimport {combineLatest, Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\nimport {ApiService} from '../api/api';\r\nimport {WorldApiObj, WorldPopulationApi} from '../api/models';\r\n\r\ntype WorldPopulation = 'Low'|'Medium'|'High'|'Very High'|'Full';\r\n\r\ninterface DataSourceObject {\r\n  readonly barValue: number;\r\n  readonly isHome: boolean;\r\n  readonly name: string;\r\n  readonly population: WorldPopulation;\r\n}\r\n\r\nfunction convertWorldPopulationApi(population: WorldPopulationApi):\r\n    WorldPopulation {\r\n  if (population === 'VeryHigh') {\r\n    return 'Very High'\r\n  }\r\n  return population;\r\n}\r\n\r\nfunction getBarValue(population: WorldPopulationApi): number {\r\n  switch (population) {\r\n    case 'Low':\r\n      return 20;\r\n    case 'Medium':\r\n      return 40;\r\n    case 'High':\r\n      return 60;\r\n    case 'VeryHigh':\r\n      return 80;\r\n    case 'Full':\r\n      return 100;\r\n    default:\r\n      return 0;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'gw-worlds',\r\n  templateUrl: './worlds.ng.html',\r\n  styleUrls: ['./worlds.scss']\r\n})\r\nexport class Worlds {\r\n\r\n  readonly data$ = this.createData();\r\n  readonly displayedColumns = ['name', 'population'];\r\n\r\n  constructor(private readonly apiService: ApiService) {}\r\n\r\n  private createData(): Observable<DataSourceObject[]> {\r\n    return combineLatest([\r\n        this.apiService.getWorlds(),\r\n        this.apiService.getAccount().pipe(startWith({world: ''})),\r\n    ]).pipe(\r\n        map(([worlds, {world: homeId}]) => worlds.map(\r\n            ({id, name, population}) => {\r\n              return {\r\n                barValue: getBarValue(population),\r\n                isHome: id === homeId,\r\n                name,\r\n                population: convertWorldPopulationApi(population),\r\n              };\r\n            })),\r\n    );\r\n  }\r\n}\r\n","<div *ngIf=\"{source: data$ | async} as data\">\r\n  <mat-progress-bar mode=\"indeterminate\" *ngIf=\"!data.source\"></mat-progress-bar>\r\n  <div class=\"title-table-container\" *ngIf=\"data.source\">\r\n    <div class=\"title\">Worlds</div>\r\n    <div class=\"coming-soon\">WvW matchups coming soon!</div>\r\n\r\n    <div class=\"table-container\">\r\n      <table [dataSource]=\"data.source\" mat-table>\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef>Name</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <div class=\"world-name\">\r\n              <div>{{element.name}}</div>\r\n              <mat-icon *ngIf=\"element.isHome\">home</mat-icon>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"population\">\r\n          <th mat-header-cell *matHeaderCellDef>Population</th>\r\n          <td\r\n              [class.low]=\"element.population === 'Low'\"\r\n              [class.medium]=\"element.population === 'Medium'\"\r\n              [class.high]=\"element.population === 'High'\"\r\n              [class.very-high]=\"element.population === 'Very High'\"\r\n              [class.full]=\"element.population === 'Full'\"\r\n              mat-cell\r\n              *matCellDef=\"let element\">\r\n            <div>{{element.population}}</div>\r\n            <mat-progress-bar mode=\"determinate\" [value]=\"element.barValue\"></mat-progress-bar>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\nimport {combineLatest, EMPTY, Observable, ReplaySubject} from 'rxjs';\r\nimport {debounceTime, filter, map, shareReplay, startWith, switchMap, take, takeUntil, tap, withLatestFrom} from 'rxjs/operators';\r\n\r\nimport {ApiService} from '../api/api';\r\nimport {ItemApiObj} from '../api/models';\r\nimport {ApiKeyService} from '../api_key/api_key';\r\nimport {ItemService} from '../item/item_service';\r\n\r\ninterface CharacterCounter {\r\n  readonly name: string;\r\n  readonly count: number;\r\n}\r\n\r\ninterface ItemCounter {\r\n  id: number;\r\n  count: number;\r\n  characterCounts: Map<string, number>;\r\n}\r\n\r\nfunction sortByName(a: ItemApiObj, b: ItemApiObj): number {\r\n  const nameA = a.name.toUpperCase();\r\n  const nameB = b.name.toUpperCase();\r\n  if (nameA < nameB) {\r\n    return -1;\r\n  }\r\n\r\n  if (nameA > nameB) {\r\n    return 1;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n@Component({\r\n  selector: 'gw-inventory',\r\n  templateUrl: './inventory.ng.html',\r\n  styleUrls: ['./inventory.scss']\r\n})\r\nexport class Inventory implements OnInit, OnDestroy {\r\n\r\n  private readonly allItemCounts = new Map<number, ItemCounter>();\r\n  private readonly destroy$ = new ReplaySubject<void>();\r\n\r\n  readonly allItems$ = this.itemService.getAllCharacterItems();\r\n  readonly myControl = new FormControl('');\r\n  readonly needsKey$ = this.createNeedsKey();\r\n\r\n  filteredItems!: Observable<ItemApiObj[]>;\r\n  selectedItem$: Observable<ItemApiObj>|null = null;\r\n  selectedItemCounts$: Observable<ItemCounter>|null = null;\r\n  characterCounts$: Observable<CharacterCounter[]>|null = null;\r\n\r\n  constructor(\r\n      private readonly apiKeyService: ApiKeyService,\r\n      private readonly apiService: ApiService,\r\n      private readonly itemService: ItemService,\r\n  ) {\r\n    this.setupAllItemCounts();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.filteredItems = this.myControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        debounceTime(200),\r\n        map((enteredValue) => {\r\n          return typeof enteredValue === 'string' ? enteredValue :\r\n              enteredValue.name;\r\n        }),\r\n        withLatestFrom(this.allItems$),\r\n        map(([name, allItems]) => {\r\n          if (name) {\r\n            const filterValue = name.toLowerCase();\r\n            return allItems.filter((item) => {\r\n              return item.name.toLowerCase().includes(filterValue);\r\n            }).sort(sortByName);\r\n          }\r\n\r\n          return allItems.slice().sort(sortByName);\r\n        }),\r\n      );\r\n\r\n    this.selectedItem$ = this.myControl.valueChanges.pipe(\r\n        filter((value): value is ItemApiObj => value.id != null),\r\n        shareReplay({bufferSize: 1, refCount: true}),\r\n    );\r\n\r\n    this.selectedItemCounts$ = this.selectedItem$.pipe(\r\n        map((item) => this.allItemCounts.get(item.id)),\r\n        filter((itemCount): itemCount is ItemCounter => !!itemCount),\r\n        tap(a => console.log(a)),\r\n        shareReplay({bufferSize: 1, refCount: true}),\r\n    );\r\n\r\n    this.characterCounts$ = this.selectedItemCounts$.pipe(\r\n        map((itemCount) => {\r\n          return Array.from(itemCount.characterCounts.entries()).map(\r\n              ([name, count]) => {\r\n                return {name, count};\r\n              });\r\n        }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  getItemClass(item: ItemApiObj): string {\r\n    return item?.rarity.toLowerCase() ?? '';\r\n  }\r\n\r\n  getItemName(item: ItemApiObj): string {\r\n    return item?.name ?? '';\r\n  }\r\n\r\n  setApiKey(): void {\r\n    this.apiKeyService.setApiKey();\r\n  }\r\n\r\n  private createNeedsKey(): Observable<boolean> {\r\n    return this.apiKeyService.apiKey$.pipe(\r\n        map((apiKey) => apiKey === null),\r\n    );\r\n  }\r\n\r\n  private setupAllItemCounts(): void {\r\n    const equipmentCounts$ = this.apiService.getCharacters().pipe(\r\n        map((characters) => {\r\n          for (const character of characters) {\r\n            for (const equipment of character.equipment) {\r\n              this.updateItemCounts(equipment.id, /* increment= */ 1,\r\n                  character.name);\r\n            }\r\n          }\r\n        }),\r\n    );\r\n\r\n    const bagCounts$ = this.apiService.getCharacters().pipe(\r\n        map((characters) => {\r\n          for (const character of characters) {\r\n            for (const bag of character.bags) {\r\n              if (!bag) {\r\n                continue;\r\n              }\r\n\r\n              this.updateItemCounts(bag.id, /* increment= */ 1,\r\n                  character.name);\r\n            }\r\n          }\r\n        }),\r\n    );\r\n\r\n    const inventoryCounts$ = this.apiService.getCharacters().pipe(\r\n        map((characters) => {\r\n          for (const character of characters) {\r\n            for (const bag of character.bags) {\r\n              if (!bag) {\r\n                continue;\r\n              }\r\n\r\n              for (const item of bag.inventory) {\r\n                if (!item) {\r\n                  continue;\r\n                }\r\n\r\n                this.updateItemCounts(item.id, item.count, character.name);\r\n              }\r\n            }\r\n          }\r\n        }),\r\n    );\r\n\r\n    const sharedInventoryCounts$ = this.apiService.getSharedInventory().pipe(\r\n        map((inventory) => {\r\n          for (const item of inventory) {\r\n            if (!item) {\r\n              continue;\r\n            }\r\n\r\n            this.updateItemCounts(item.id, item.count, 'Shared Inventory');\r\n          }\r\n        }),\r\n    );\r\n\r\n    const bankCounts$ = this.apiService.getBank().pipe(\r\n        map((bank) => {\r\n          for (const item of bank) {\r\n            if (!item) {\r\n              continue;\r\n            }\r\n\r\n            this.updateItemCounts(item.id, item.count, 'Bank');\r\n          }\r\n        }),\r\n    );\r\n\r\n    const materialCounts$ = this.apiService.getMaterials().pipe(\r\n        map((materials) => {\r\n          for (const material of materials) {\r\n            if (!material) {\r\n              continue;\r\n            }\r\n\r\n            this.updateItemCounts(material.id, material.count,\r\n                'Material Storage');\r\n          }\r\n        }),\r\n    );\r\n\r\n    combineLatest([\r\n      equipmentCounts$,\r\n      bagCounts$,\r\n      inventoryCounts$,\r\n      sharedInventoryCounts$,\r\n      bankCounts$,\r\n      materialCounts$,\r\n    ]).pipe(\r\n        take(1),\r\n        takeUntil(this.destroy$),\r\n    ).subscribe();\r\n  }\r\n\r\n  private updateItemCounts(\r\n      itemId: number, increment: number, characterName: string): void {\r\n    const itemCounter: ItemCounter = this.allItemCounts.get(itemId) ??\r\n            {\r\n              id: itemId,\r\n              count: 0,\r\n              characterCounts: new Map<string, number>(),\r\n            };\r\n\r\n        itemCounter.count += increment;\r\n        this.allItemCounts.set(itemId, itemCounter);\r\n\r\n        const characterCount =\r\n            itemCounter.characterCounts.get(characterName) ?? 0;\r\n        itemCounter.characterCounts.set(characterName,\r\n            characterCount + increment);\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"needsKey$ | async; else searchView\">\r\n  <div class=\"title\">This page requires an API key</div>\r\n  <button (click)=\"setApiKey()\" color=\"primary\" mat-button>\r\n    Enter an API key\r\n  </button>\r\n</div>\r\n\r\n<ng-template #searchView>\r\n  <div *ngIf=\"{isReady: allItems$ | async} as data\">\r\n    <mat-progress-bar mode=\"indeterminate\" *ngIf=\"!data.isReady\"></mat-progress-bar>\r\n    <div class=\"container\" *ngIf=\"data.isReady\">\r\n      <div class=\"title\">Inventory Search</div>\r\n\r\n      <mat-autocomplete #auto=\"matAutocomplete\" autoActiveFirstOption [displayWith]=\"getItemName\">\r\n        <mat-option *ngFor=\"let item of filteredItems | async\" [value]=\"item\">\r\n          {{item.name}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Search for an item</mat-label>\r\n        <input\r\n            [formControl]=\"myControl\"\r\n            [matAutocomplete]=\"auto\"\r\n            matInput\r\n            placeholder=\"Ectoplasm\"\r\n            type=\"text\">\r\n      </mat-form-field>\r\n\r\n      <div *ngIf=\"selectedItem$ | async as selectedItem\">\r\n        <div class=\"item-icon-row\">\r\n          <img\r\n              class=\"icon\"\r\n              [class]=\"getItemClass(selectedItem)\"\r\n              [src]=\"selectedItem.icon\">\r\n          <div class=\"item-info\">\r\n            <div class=\"item-name\">{{selectedItem.name}}</div>\r\n            <div class=\"item-description\">{{selectedItem.description}}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"item-count-row\" *ngIf=\"selectedItemCounts$ | async as itemCount\">\r\n          <p>You have <strong>{{itemCount.count | number}}</strong> total</p>\r\n          <div class=\"character-counts\" *ngIf=\"characterCounts$ | async as characterCounts\">\r\n            <p *ngFor=\"let characterCount of characterCounts\">\r\n              {{characterCount.name}} has {{characterCount.count | number}}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","<div *ngIf=\"item\">\r\n  <div class=\"item-name\" [class]=\"getClass()\">{{item.name}}</div>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\n\r\nimport {ItemApiObj, ItemRarity} from '../api/models';\r\n\r\n@Component({\r\n  selector: 'gw-armor-weapon-info',\r\n  templateUrl: './armor_weapon_info.ng.html',\r\n  styleUrls: ['./armor_weapon_info.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ArmorWeaponInfo {\r\n\r\n  @Input() item: ItemApiObj|null = null;\r\n\r\n  getClass(): string {\r\n    return this.item?.rarity.toLowerCase() ?? '';\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\n\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {ApiService} from '../api/api';\nimport {ApiKeyService} from '../api_key/api_key';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.ng.html',\n  styleUrls: ['./app.scss'],\n})\nexport class App {\n  readonly activeRoute$ = this.createActiveRoute();\n\n  constructor(\n    private readonly apiKeyService: ApiKeyService,\n    private readonly apiService: ApiService,\n    private readonly router: Router\n  ) {}\n\n  setApiKey(): void {\n    this.apiKeyService.setApiKey();\n  }\n\n  private createActiveRoute(): Observable<string> {\n    return this.router.events.pipe(\n      filter((event): event is NavigationEnd => {\n        return event instanceof NavigationEnd;\n      }),\n      map(event => event.urlAfterRedirects.replace('/', ''))\n    );\n  }\n}\n","<mat-toolbar class=\"toolbar\" color=\"primary\">\n  <span>Guild Wars 2</span>\n  <div class=\"spacer\"></div>\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>settings</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button (click)=\"setApiKey()\" mat-menu-item>Add/Edit API Key</button>\n  </mat-menu>\n</mat-toolbar>\n\n<nav\n    color=\"accent\"\n    mat-tab-nav-bar\n    *ngIf=\"{activeRoute: activeRoute$ | async} as data\">\n  <a [active]=\"data.activeRoute === 'worlds'\" matTabLink routerLink=\"/worlds\">\n    Worlds\n  </a>\n  <a [active]=\"data.activeRoute === 'characters'\" matTabLink routerLink=\"/characters\">\n    Characters\n  </a>\n  <a [active]=\"data.activeRoute === 'inventory'\" matTabLink routerLink=\"/inventory\">\n    Inventory\n  </a>\n  <a [active]=\"data.activeRoute === 'dailies'\" matTabLink routerLink=\"/dailies\">\n    Dailies\n  </a>\n  <a [active]=\"data.activeRoute === 'account-info'\" matTabLink routerLink=\"/account-info\">\n    Account Info\n  </a>\n</nav>\n\n<router-outlet></router-outlet>\n","import {Component, QueryList, ViewChildren} from '@angular/core';\r\n\r\nimport {combineLatest, Observable, of as observableOf} from 'rxjs';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\n\r\nimport {EquipmentExpander} from './equipment_expander';\r\nimport {ApiService} from '../api/api';\r\nimport {CraftingApiObj, DisciplineApiObj, EquipmentApiObj, GenderApiObj, ProfessionApiObj, RaceApiObj} from '../api/models';\r\nimport {ApiKeyService} from '../api_key/api_key';\r\nimport {dateStringToMediumDate, secondsToDuration} from '../util/dates';\r\n\r\ninterface CraftingInfo {\r\n  readonly info: CraftingApiObj;\r\n  readonly icon: string;\r\n}\r\n\r\ninterface DataSourceObject {\r\n  readonly age: string;\r\n  readonly crafting: CraftingInfo[];\r\n  readonly created: string;\r\n  readonly deaths: string;\r\n  readonly equipment: EquipmentApiObj[];\r\n  readonly gender: GenderApiObj;\r\n  readonly level: number;\r\n  readonly name: string;\r\n  readonly profession: ProfessionApiObj;\r\n  readonly professionIcon: string;\r\n  readonly race: RaceApiObj;\r\n  readonly title: Observable<string>;\r\n}\r\n\r\nfunction getCraftingIconUrl(\r\n    discipline: DisciplineApiObj, filesMap: Map<string, string>): string {\r\n  const prefix = 'map_crafting_';\r\n  const suffix = discipline === 'Chef' ? 'cook' : discipline.toLowerCase();\r\n\r\n  return filesMap.get(`${prefix}${suffix}`) ?? '';\r\n}\r\n\r\nfunction getProfessionIconUrl(\r\n    profession: ProfessionApiObj, filesMap: Map<string, string>): string {\r\n  const prefix = 'icon_';\r\n  const suffix = profession.toLowerCase();\r\n\r\n  return filesMap.get(`${prefix}${suffix}`) ?? '';\r\n}\r\n\r\n@Component({\r\n  selector: 'gw-characters',\r\n  templateUrl: './characters.ng.html',\r\n  styleUrls: ['./characters.scss'],\r\n})\r\nexport class Characters {\r\n\r\n  readonly data$ = this.createData();\r\n  readonly displayedColumns = [\r\n      'name',\r\n      'level',\r\n      'profession',\r\n      'crafting',\r\n      'race',\r\n      'gender',\r\n      'age',\r\n      'created',\r\n      'deaths',\r\n      'equipment',\r\n  ];\r\n  readonly needsKey$ = this.createNeedsKey();\r\n\r\n  @ViewChildren(EquipmentExpander) expanders!: QueryList<EquipmentExpander>;\r\n\r\n  constructor(\r\n      private readonly apiKeyService: ApiKeyService,\r\n      private readonly apiService: ApiService,\r\n  ) {}\r\n\r\n  collapseAll(): void {\r\n    this.expanders.forEach((expander) => expander.close());\r\n  }\r\n\r\n  expandAll(): void {\r\n    this.expanders.forEach((expander) => expander.open());\r\n  }\r\n\r\n  setApiKey(): void {\r\n    this.apiKeyService.setApiKey();\r\n  }\r\n\r\n  private createData(): Observable<DataSourceObject[]> {\r\n    // each `character`` has an array of `equipment`\r\n    // each `equipment` has an item id\r\n    // each item has name, description, infix_upgrade, etc.\r\n    return combineLatest([\r\n        this.apiService.getCharacters(),\r\n        this.apiService.getFilesMap(),\r\n    ]).pipe(\r\n        tap(([a]) => console.log(a)),\r\n        map(([characters, filesMap]) => {\r\n          return characters.map((character) => {\r\n            return {\r\n              age: secondsToDuration(character.age),\r\n              crafting: getCraftingInfo(character.crafting, filesMap),\r\n              created: dateStringToMediumDate(character.created),\r\n              deaths: character.deaths.toLocaleString(),\r\n              equipment: character.equipment,\r\n              gender: character.gender,\r\n              level: character.level,\r\n              name: character.name,\r\n              profession: character.profession,\r\n              professionIcon:\r\n                  getProfessionIconUrl(character.profession, filesMap),\r\n              race: character.race,\r\n              title: this.getTitle(character.title),\r\n            };\r\n          });\r\n        }),\r\n    );\r\n  }\r\n\r\n  private createNeedsKey(): Observable<boolean> {\r\n    return this.apiKeyService.apiKey$.pipe(\r\n        map((apiKey) => apiKey === null),\r\n    );\r\n  }\r\n\r\n  private getTitle(id: number|undefined): Observable<string> {\r\n    if (id == null) {\r\n      return observableOf('');\r\n    }\r\n\r\n    return this.apiService.getTitle(id).pipe(\r\n        map((title) => title.name),\r\n    );\r\n  }\r\n}\r\n\r\nfunction getCraftingInfo(\r\n    craftingArray: CraftingApiObj[], filesMap: Map<string, string>):\r\n    CraftingInfo[] {\r\n  return craftingArray.map((craftingObj) => {\r\n    return {\r\n      info: craftingObj,\r\n      icon: getCraftingIconUrl(craftingObj.discipline, filesMap),\r\n    }\r\n  });\r\n}\r\n","<div class=\"container\" *ngIf=\"needsKey$ | async; else tableView\">\r\n  <div class=\"title\">This page requires an API key</div>\r\n  <button (click)=\"setApiKey()\" color=\"primary\" mat-button>\r\n    Enter an API key\r\n  </button>\r\n</div>\r\n\r\n<ng-template #tableView>\r\n  <div *ngIf=\"{source: data$ | async} as data\">\r\n    <mat-progress-bar mode=\"indeterminate\" *ngIf=\"!data.source\"></mat-progress-bar>\r\n    <div class=\"title-table-container\" *ngIf=\"data.source\">\r\n      <div class=\"title\">Characters</div>\r\n\r\n      <table [dataSource]=\"data.source\" mat-table>\r\n        <ng-container matColumnDef=\"age\">\r\n          <th mat-header-cell *matHeaderCellDef>Age</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.age}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"crafting\">\r\n          <th mat-header-cell *matHeaderCellDef>Crafting</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <div *ngFor=\"let c of element.crafting\">\r\n              <div class=\"row-with-icon\">\r\n                <img [src]=\"c.icon\">\r\n                <div class=\"row-with-crafting-rating\">\r\n                  <span>{{c.info.discipline}}</span>\r\n                  <span>({{c.info.rating}})</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"created\">\r\n          <th mat-header-cell *matHeaderCellDef>Created</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.created}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"deaths\">\r\n          <th mat-header-cell *matHeaderCellDef>Deaths</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.deaths}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"equipment\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n            <div class=\"equipment-header\">\r\n              Equipment\r\n              <div>\r\n                <button\r\n                    (click)=\"expandAll()\"\r\n                    mat-icon-button\r\n                    matTooltip=\"Expand all\"\r\n                    matTooltipPosition=\"above\">\r\n                  <mat-icon>expand_more</mat-icon>\r\n                </button>\r\n                <button\r\n                    (click)=\"collapseAll()\"\r\n                    mat-icon-button\r\n                    matTooltip=\"Collapse all\"\r\n                    matTooltipPosition=\"above\">\r\n                  <mat-icon>expand_less</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <gw-equipment-expander [equipments]=\"element.equipment\"></gw-equipment-expander>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"gender\">\r\n          <th mat-header-cell *matHeaderCellDef>Gender</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.gender}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"level\">\r\n          <th mat-header-cell *matHeaderCellDef>Level</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.level}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef>Name</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <div>{{element.name}}</div>\r\n            <div class=\"character-title\">{{element.title | async}}</div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"profession\">\r\n          <th mat-header-cell *matHeaderCellDef>Profession</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <div class=\"row-with-icon\">\r\n              <img [src]=\"element.professionIcon\">\r\n              {{element.profession}}\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"race\">\r\n          <th mat-header-cell *matHeaderCellDef>Race</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.race}}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\nimport {ArmorWeaponInfo} from './armor_weapon_info';\r\nimport {Characters} from './characters';\r\nimport {EquipmentExpander} from './equipment_expander';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ArmorWeaponInfo,\r\n    Characters,\r\n    EquipmentExpander,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatBadgeModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatProgressBarModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n  ],\r\n  exports: [Characters]\r\n})\r\nexport class CharactersModule {}\r\n","const SECONDS_IN_MINUTE = 60;\r\nconst MINUTES_IN_HOUR = 60;\r\nconst HOURS_IN_DAY = 24;\r\nconst DAYS_IN_YEAR = 365;\r\n\r\nconst SECONDS_IN_HOUR = SECONDS_IN_MINUTE * MINUTES_IN_HOUR;\r\nconst SECONDS_IN_DAY = SECONDS_IN_HOUR * HOURS_IN_DAY;\r\nconst SECONDS_IN_YEAR = SECONDS_IN_DAY * DAYS_IN_YEAR;\r\n\r\n/**\r\n * Formats seconds to 'yy years, dd days, hh hours and mm minutes'. Omits\r\n * years and days if zero.\r\n */\r\nexport function secondsToDuration(seconds: number): string {\r\n  const numYears = Math.floor(seconds / SECONDS_IN_YEAR);\r\n  const numDays = Math.floor(seconds % SECONDS_IN_YEAR / SECONDS_IN_DAY);\r\n  const numHours = Math.floor(seconds % SECONDS_IN_DAY / SECONDS_IN_HOUR);\r\n  const numMinutes =\r\n      Math.floor(seconds % SECONDS_IN_HOUR / SECONDS_IN_MINUTE);\r\n\r\n  let formattedAge = '';\r\n  formattedAge += numYears > 0 ? numYears + ' years, ' : '';\r\n  formattedAge += numDays > 0 ? numDays + ' days, ' : '';\r\n  formattedAge += numHours + ' hours and ' + numMinutes + ' minutes';\r\n\r\n  return formattedAge;\r\n}\r\n\r\n/**\r\n * Formats the date to 'MONTH DAY, YEAR'.\r\n */\r\nexport function dateStringToMediumDate(dateInput: string): string {\r\n  const date = new Date(dateInput);\r\n  const options = {year: 'numeric', month: 'short', day: 'numeric'};\r\n\r\n  return date.toLocaleDateString('en-US', options);\r\n}\r\n","import {Component} from '@angular/core';\n\nimport {combineLatest, Observable, of as observableOf} from 'rxjs';\nimport {map, switchMap} from 'rxjs/operators';\n\nimport {ApiService} from '../api/api';\nimport {AccountApiObj, MasteryPointsApiObj, PvpApiObj, WorldApiObj} from '../api/models';\nimport {ApiKeyService} from '../api_key/api_key';\nimport {dateStringToMediumDate, secondsToDuration} from '../util/dates';\n\ninterface DataSourceObject {\n  readonly key: string;\n  readonly value: string | number | string[];\n}\n\n@Component({\n  selector: 'gw-account-info',\n  templateUrl: './account_info.ng.html',\n  styleUrls: ['./account_info.scss'],\n})\nexport class AccountInfo {\n  readonly data$ = this.createData();\n  readonly displayedColumns = ['key', 'value'];\n  readonly needsKey$ = this.createNeedsKey();\n\n  constructor(\n    private readonly apiKeyService: ApiKeyService,\n    private readonly apiService: ApiService\n  ) {}\n\n  setApiKey(): void {\n    this.apiKeyService.setApiKey();\n  }\n\n  private createData(): Observable<DataSourceObject[]> {\n    return combineLatest([\n      this.apiService.getAccount(),\n      this.apiService.getMasteryPoints(),\n      this.apiService.getPvpStats(),\n      this.apiService.getWorlds(),\n    ]).pipe(\n      switchMap(([account, masteryPoints, pvpStats, worlds]) => {\n        const guildNames$ = combineLatest(\n          account.guilds.map(guildId => {\n            return this.apiService.getGuild(guildId);\n          })\n        ).pipe(map(guilds => guilds.map(guild => guild.name)));\n\n        return combineLatest([\n          observableOf(account),\n          observableOf(masteryPoints),\n          observableOf(pvpStats),\n          observableOf(worlds),\n          guildNames$,\n        ]);\n      }),\n      map(([account, masteryPoints, pvpStats, worlds, guildNames]) => {\n        return this.createDataSourceFromAccount(\n          account,\n          masteryPoints,\n          pvpStats,\n          worlds,\n          guildNames\n        );\n      })\n    );\n  }\n\n  private createDataSourceFromAccount(\n    account: AccountApiObj,\n    masteryPoints: MasteryPointsApiObj,\n    pvpStats: PvpApiObj,\n    worlds: WorldApiObj[],\n    guildNames: string[]\n  ): DataSourceObject[] {\n    const dataArray = [];\n    const world = worlds.find(world => world.id === account.world);\n\n    dataArray.push({key: 'Name', value: account.name});\n    dataArray.push({key: 'Age', value: secondsToDuration(account.age)});\n    dataArray.push({key: 'World', value: world?.name ?? ''});\n    dataArray.push({key: 'WvW Rank', value: account.wvw_rank});\n    dataArray.push({key: 'PvP Rank', value: pvpStats.pvp_rank});\n    dataArray.push({\n      key: 'Mastery Points',\n      value: computeMasteryPoints(masteryPoints),\n    });\n    dataArray.push({\n      key: 'Created',\n      value: dateStringToMediumDate(account.created),\n    });\n    dataArray.push({\n      key: 'AP',\n      value: (account.daily_ap + account.monthly_ap).toLocaleString(),\n    });\n    dataArray.push({key: 'Fractal Level', value: account.fractal_level});\n    dataArray.push({key: 'Guilds', value: guildNames.join(', ')});\n\n    return dataArray;\n  }\n\n  private createNeedsKey(): Observable<boolean> {\n    return this.apiKeyService.apiKey$.pipe(map(apiKey => apiKey === null));\n  }\n}\n\nfunction computeMasteryPoints(masteryPoints: MasteryPointsApiObj): string {\n  return masteryPoints.totals\n    .map(mastery => mastery.earned)\n    .reduce((prev, curr) => prev + curr, 0)\n    .toLocaleString();\n}\n","<div class=\"container\" *ngIf=\"needsKey$ | async; else tableView\">\r\n  <div class=\"title\">This page requires an API key</div>\r\n  <button (click)=\"setApiKey()\" color=\"primary\" mat-button>\r\n    Enter an API key\r\n  </button>\r\n</div>\r\n\r\n<ng-template #tableView>\r\n  <div *ngIf=\"{source: data$ | async} as data\">\r\n    <mat-progress-bar mode=\"indeterminate\" *ngIf=\"!data.source\"></mat-progress-bar>\r\n    <div class=\"container\" *ngIf=\"data.source\">\r\n      <div class=\"title\">Account Info</div>\r\n\r\n      <table [dataSource]=\"data.source\" mat-table>\r\n        <ng-container matColumnDef=\"key\">\r\n          <th mat-header-cell *matHeaderCellDef>Key</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.key}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"value\">\r\n          <th mat-header-cell *matHeaderCellDef>Value</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.value}}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {AccountInfo} from '../account_info/account_info';\nimport {Characters} from '../characters/characters';\nimport {Dailies} from '../dailies/dailies';\nimport {Inventory} from '../inventory/inventory';\nimport {Worlds} from '../worlds/worlds';\n\nconst routes: Routes = [\n  {path: 'account-info', component: AccountInfo},\n  {path: 'characters', component: Characters},\n  {path: 'inventory', component: Inventory},\n  {path: 'dailies', component: Dailies},\n  {path: 'worlds', component: Worlds},\n  {path: '', redirectTo: '/worlds', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\n\r\nimport {Inventory} from './inventory';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Inventory,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [Inventory]\r\n})\r\nexport class InventoryModule {}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {combineLatest, Observable, of as observableOf} from 'rxjs';\r\nimport {map, shareReplay, switchMap, tap} from 'rxjs/operators';\r\n\r\nimport {ApiService} from '../api/api';\r\nimport {ItemApiObj} from '../api/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ItemService {\r\n\r\n  private readonly idToItemObs = new Map<number, Observable<ItemApiObj>>();\r\n  private readonly allCharacterItems$ = this.createAllItems();\r\n  private readonly allCharacterItemIdsToItems$ =\r\n      this.createAllItemIdToItem(this.allCharacterItems$);\r\n\r\n  constructor(\r\n      private readonly apiService: ApiService,\r\n  ) {}\r\n\r\n  getAllCharacterItemIdsToItems(): Observable<Map<number, ItemApiObj>> {\r\n    return this.allCharacterItemIdsToItems$;\r\n  }\r\n\r\n  getAllCharacterItems(): Observable<ItemApiObj[]> {\r\n    return this.allCharacterItems$;\r\n  }\r\n\r\n  getItem(id: number): Observable<ItemApiObj> {\r\n    if (!this.idToItemObs.has(id)) {\r\n      const item$ = this.apiService.getItem(id).pipe(\r\n          shareReplay({bufferSize: 1, refCount: false}),\r\n          );\r\n      this.idToItemObs.set(id, item$);\r\n    }\r\n\r\n    return this.idToItemObs.get(id)!;\r\n  }\r\n\r\n  private createAllItems(): Observable<ItemApiObj[]> {\r\n    const equipmentIds$ = this.apiService.getCharacters().pipe(\r\n        map((characters) => {\r\n          return characters\r\n              .flatMap((character) => character.equipment)\r\n              .filter((equipment) => equipment)\r\n              .map((equipment) => equipment.id);\r\n        }),\r\n    );\r\n\r\n    const bagIds$ = this.apiService.getCharacters().pipe(\r\n        map((characters) => {\r\n          return characters\r\n              .flatMap((character) => character.bags)\r\n              .filter((bag) => bag)\r\n              .map((bag) => bag.id);\r\n        }),\r\n    );\r\n\r\n    const inventoryIds$ = this.apiService.getCharacters().pipe(\r\n        map((characters) => {\r\n          return characters\r\n              .flatMap((character) => character.bags)\r\n              .filter((bag) => bag)\r\n              .flatMap((bag) => bag.inventory)\r\n              .filter((item) => item)\r\n              .map((item) => item.id);\r\n        }),\r\n    );\r\n\r\n    const sharedInventoryIds$ = this.apiService.getSharedInventory().pipe(\r\n        map((inventory) => {\r\n          return inventory\r\n              .filter((item) => item)\r\n              .map((item) => item.id);\r\n        }),\r\n    );\r\n\r\n    const bankIds$ = this.apiService.getBank().pipe(\r\n        map((bank) => {\r\n          return bank\r\n              .filter((item) => item)\r\n              .map((item) => item.id);\r\n        }),\r\n    );\r\n\r\n    const materialIds$ = this.apiService.getMaterials().pipe(\r\n        map((materials) => {\r\n          return materials\r\n              .filter((material) => material)\r\n              .map((material) => material.id);\r\n        }),\r\n    );\r\n\r\n    return combineLatest([\r\n      equipmentIds$,\r\n      bagIds$,\r\n      inventoryIds$,\r\n      sharedInventoryIds$,\r\n      bankIds$,\r\n      materialIds$,\r\n    ]).pipe(\r\n        map(([\r\n          equipmentIds,\r\n          bagIds,\r\n          inventoryIds,\r\n          sharedInventoryIds,\r\n          bankIds,\r\n          materialIds,\r\n        ]) => {\r\n          return new Set([\r\n            ...equipmentIds,\r\n            ...bagIds,\r\n            ...inventoryIds,\r\n            ...sharedInventoryIds,\r\n            ...bankIds,\r\n            ...materialIds,\r\n          ]);\r\n        }),\r\n        switchMap((itemIds) => {\r\n          return this.apiService.getItems(Array.from(itemIds));\r\n        }),\r\n        shareReplay({bufferSize: 1, refCount: false}),\r\n    );\r\n  }\r\n\r\n  private createAllItemIdToItem(allItems$: Observable<ItemApiObj[]>):\r\n      Observable<Map<number, ItemApiObj>> {\r\n    return allItems$.pipe(\r\n        map((items) => {\r\n          const mapping = new Map<number, ItemApiObj>();\r\n\r\n          for (const item of items) {\r\n            mapping.set(item.id, item);\r\n          }\r\n\r\n          return mapping;\r\n        }),\r\n        shareReplay({bufferSize: 1, refCount: false}),\r\n    );\r\n  }\r\n}\r\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app_module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}